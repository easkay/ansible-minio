# Taken from https://github.com/minio/minio-service/blob/master/linux-systemd/minio.service and tweaked
[Unit]
Description=Minio
Documentation=https://docs.minio.io
Wants=network-online.target
After=network-online.target
AssertFileIsExecutable={{ minio_binary_dir }}/minio

[Service]
WorkingDirectory={{ minio_working_dir }}

User={{ minio_user }}
Group={{ minio_user }}

PermissionsStartOnly=true

EnvironmentFile=-/etc/default/minio
ExecStartPre=/bin/bash -c "[ -n \"${MINIO_VOLUMES}\" ] || (echo \"Variable MINIO_VOLUMES not set in /etc/default/minio\" && exit 1)"
{% if minio_tune_kernel %}
ExecStartPre=/bin/bash -c "echo 'madvise' > /sys/kernel/mm/transparent_hugepage/enabled"
{% endif %}

ExecStart={{ minio_binary_dir }}/minio server --address {{ minio_bind_address }}:{{ minio_bind_port }} $MINIO_OPTS $MINIO_VOLUMES

# Let systemd restart this service only if it has ended with the clean exit code or signal.
Restart=on-success

{% if minio_setup_logging and minio_use_syslog %}
StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=minio
{% elif minio_setup_logging %}
StandardOutput=file:{{ minio_log_dir }}/{{ minio_stdout_log_name }}
StandardError=file:{{ minio_log_dir }}/{{ minio_stderr_log_name }}
{% else %}
StandardOutput=journal
StandardError=inherit
{% endif %}

# Specifies the maximum file descriptor number that can be opened by this process
LimitNOFILE=65536

# Disable timeout logic and wait until process is stopped
TimeoutStopSec=0

# SIGTERM signal is used to stop Minio
KillSignal=SIGTERM

SendSIGKILL=no

SuccessExitStatus=0

[Install]
WantedBy=multi-user.target

# Built for ${project.name}-${project.version} (${project.name})
